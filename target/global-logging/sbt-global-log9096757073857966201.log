[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\youse\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\youse\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 21)
[debug]       Load.loadUnit: plugins took 295.0356ms
[debug]       Load.loadUnit: defsScala took 0.8079ms
[debug] [Loading] Scanning directory C:\Users\youse\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\youse\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 40.9122 ms
[debug]           Load.resolveProject(global-plugins) took 82.7328ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\youse\.sbt\1.0\plugins, plugins: List(<none>))) took 175.486ms
[debug] [Loading] Done in C:\Users\youse\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 244.7307ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6293ms
[debug]     Load.loadUnit(file:/C:/Users/youse/.sbt/1.0/plugins/, ...) took 567.3128ms
[debug]   Load.apply: load took 1127.5005ms
[debug]   Load.apply: resolveProjects took 26.8377ms
[debug]   Load.apply: finalTransforms took 174.6379ms
[debug]   Load.apply: config.delegates took 37.1371ms
[debug]   Load.apply: Def.make(settings)... took 1847.6498ms
[debug]   Load.apply: structureIndex took 273.6168ms
[debug]   Load.apply: mkStreams took 7.8528ms
[info] loading global plugins from C:\Users\youse\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7200.0472ms
[debug]           Load.loadUnit: plugins took 65.5707ms
[debug]           Load.loadUnit: defsScala took 0.0094ms
[debug] [Loading] Scanning directory C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0\project
[debug]             Load.loadUnit: mkEval took 23.033ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.3182 ms
[info] loading settings for project scalation_2-0-build from idea.sbt ...
[debug]               Load.resolveProject(scalation_2-0-build) took 6.091ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalation_2-0-build, base: C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0\project, plugins: List(<none>))) took 12.6916ms
[debug] [Loading] Done in C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0\project, returning: (scalation_2-0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 383.0432ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.1538ms
[debug]         Load.loadUnit(file:/C:/Users/youse/OneDrive/Documents/New%20Scalation/scalation_2.0/project/, ...) took 465.4368ms
[debug]       Load.apply: load took 468.7672ms
[debug]       Load.apply: resolveProjects took 0.5515ms
[debug]       Load.apply: finalTransforms took 29.6322ms
[debug]       Load.apply: config.delegates took 0.619ms
[debug]       Load.apply: Def.make(settings)... took 227.0539ms
[debug]       Load.apply: structureIndex took 145.2886ms
[debug]       Load.apply: mkStreams took 0.017ms
[info] loading project definition from C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1834.737ms
[debug]     Load.loadUnit: defsScala took 0.0123ms
[debug] [Loading] Scanning directory C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0
[debug]       Load.loadUnit: mkEval took 1.8932ms
[debug] [Loading] Found root project scalation w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.199 ms
[info] loading settings for project scalation from build.sbt ...
[debug]         Load.resolveProject(scalation) took 103.9095ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalation, base: C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0, plugins: List(<none>))) took 115.524ms
[debug] [Loading] Done in C:\Users\youse\OneDrive\Documents\New Scalation\scalation_2.0, returning: (scalation)
[debug]     Load.loadUnit: loadedProjectsRaw took 355.7364ms
[debug]     Load.loadUnit: cleanEvalClasses took 48.403ms
[debug]   Load.loadUnit(file:/C:/Users/youse/OneDrive/Documents/New%20Scalation/scalation_2.0/, ...) took 2241.7817ms
[debug] Load.apply: load took 2247.1993ms
[debug] Load.apply: resolveProjects took 0.402ms
[debug] Load.apply: finalTransforms took 123.3174ms
[debug] Load.apply: config.delegates took 1.1342ms
[debug] Load.apply: Def.make(settings)... took 293.7474ms
[debug] Load.apply: structureIndex took 84.3224ms
[debug] Load.apply: mkStreams took 0.0055ms
[info] set current project to scalation (in build file:/C:/Users/youse/OneDrive/Documents/New%20Scalation/scalation_2.0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
