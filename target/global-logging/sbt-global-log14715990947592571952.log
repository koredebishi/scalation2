[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\youse\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\youse\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 21)
[debug]       Load.loadUnit: plugins took 191.7526ms
[debug]       Load.loadUnit: defsScala took 0.4298ms
[debug] [Loading] Scanning directory C:\Users\youse\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\youse\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 56.5793 ms
[debug]           Load.resolveProject(global-plugins) took 130.5691ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\youse\.sbt\1.0\plugins, plugins: List(<none>))) took 253.7913ms
[debug] [Loading] Done in C:\Users\youse\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 328.6329ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3531ms
[debug]     Load.loadUnit(file:/C:/Users/youse/.sbt/1.0/plugins/, ...) took 538.4891ms
[debug]   Load.apply: load took 892.8472ms
[debug]   Load.apply: resolveProjects took 10.112ms
[debug]   Load.apply: finalTransforms took 111.0279ms
[debug]   Load.apply: config.delegates took 9.3794ms
[debug]   Load.apply: Def.make(settings)... took 666.9622ms
[debug]   Load.apply: structureIndex took 128.1223ms
[debug]   Load.apply: mkStreams took 3.9043ms
[info] loading global plugins from C:\Users\youse\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3845.3058ms
[debug]           Load.loadUnit: plugins took 28.3713ms
[debug]           Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\New Scalation\scalation_2.0\project
[debug]             Load.loadUnit: mkEval took 8.2422ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\New Scalation\scalation_2.0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5887 ms
[info] loading settings for project scalation_2-0-build from idea.sbt ...
[debug]               Load.resolveProject(scalation_2-0-build) took 3.9162ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalation_2-0-build, base: C:\New Scalation\scalation_2.0\project, plugins: List(<none>))) took 7.1229ms
[debug] [Loading] Done in C:\New Scalation\scalation_2.0\project, returning: (scalation_2-0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3176.0758ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6397ms
[debug]         Load.loadUnit(file:/C:/New%20Scalation/scalation_2.0/project/, ...) took 3211.0154ms
[debug]       Load.apply: load took 3212.88ms
[debug]       Load.apply: resolveProjects took 0.1123ms
[debug]       Load.apply: finalTransforms took 12.0019ms
[debug]       Load.apply: config.delegates took 0.4011ms
[debug]       Load.apply: Def.make(settings)... took 107.56ms
[debug]       Load.apply: structureIndex took 31.9009ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\New Scalation\scalation_2.0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4871.1564ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\New Scalation\scalation_2.0
[debug]       Load.loadUnit: mkEval took 0.5539ms
[debug] [Loading] Found root project scalation w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1658 ms
[info] loading settings for project scalation from build.sbt ...
[debug]         Load.resolveProject(scalation) took 72.8404ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalation, base: C:\New Scalation\scalation_2.0, plugins: List(<none>))) took 77.6473ms
[debug] [Loading] Done in C:\New Scalation\scalation_2.0, returning: (scalation)
[debug]     Load.loadUnit: loadedProjectsRaw took 2284.1382ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.4145ms
[debug]   Load.loadUnit(file:/C:/New%20Scalation/scalation_2.0/, ...) took 7175.706ms
[debug] Load.apply: load took 7178.3279ms
[debug] Load.apply: resolveProjects took 0.3089ms
[debug] Load.apply: finalTransforms took 42.6743ms
[debug] Load.apply: config.delegates took 0.4898ms
[debug] Load.apply: Def.make(settings)... took 98.1036ms
[debug] Load.apply: structureIndex took 31.6667ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to scalation (in build file:/C:/New%20Scalation/scalation_2.0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
