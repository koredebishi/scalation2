
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** @author  Andr√© Filipe Caldas Laranjeira
 *  @version 2.0
 *  @note    Mon Jan 22 15:40:12 EST 2024
 *  @see     LICENSE (MIT style license file).
 *
 *  @note    Booth Function
 */

// Package definition.
package scalation
package optimization
package functions

// Project imports.
import scalation.mathstat.VectorD

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** The `BoothFunction` object to represent the Booth function for tests and benchmarks
 *  performed on function optimization and gradient descent classes.
 */
object BoothFunction extends BenchmarkFunction:

    val functionMinimum: VectorD = VectorD (1, 3)

    def objectiveFunction (x: VectorD): Double =
        (x(0) + 2 * x(1) - 7) ~^ 2 + (2 * x(0) + x(1) - 5) ~^ 2

    override def gradientFunction (x: VectorD): VectorD =
        VectorD (10 * x(0) + 8 * x(1) - 34, 8 * x(0) + 10 * x(1) - 38)

end BoothFunction

